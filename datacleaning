--Standardize Date Format 
SELECT SaleDate, CONVERT(Date, Saledate)
FROM Nashville

UPDATE Nashville 
SET SaleDate = CONVERT(Date, Saledate)

SELECT SaleDate 
FROM NASHVILLE

--Populate Property Address Data 
SELECT * 
FROM Nashville 
Where PropertyAddress is null

Select a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress, ISNULL(a.PropertyAddress, b.PropertyAddress)
From Nashville a
JOIN Nashville b
ON a.ParcelID = b.ParcelID 
AND a.UniqueID <> b.UniqueID
WHERE a.PropertyAddress IS NULL

UPDATE a
SET PropertyAddress = ISNULL(a.PropertyAddress, b.PropertyAddress) 
FROM Nashville a
JOIN Nashville b
ON a.ParcelId = b.ParcelID 
AND a.UniqueID <> b.UniqueID 
WHERE a.PropertyAddress IS NULL


--Breaking out Address into Individual Columns (Address, City, State) 
SELECT PropertyAddress,
SUBSTRING(PropertyAddress,1, CHARINDEX(',', PropertyAddress)) as Address
FROM Nashville

SELECT 
SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1) AS address
, SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) + 1, LEN(PropertyAddress)) as Address
FROM Nashville

ALTER TABLE Nashville 
ADD PropertySplitAddress NVARCHAR(255)

UPDATE Nashville 
SET PropertySplitAddress = SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1)

ALTER TABLE Nashville 
ADD PropertySplitCity NVARCHAR(255)

UPDATE Nashville 
SET PropertySplitCity = SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) + 1, LEN(PropertyAddress))

SELECT * FROM Nashville

--Fazendo a mesma coisa com o OwnerAddress
SELECT
PARSENAME(REPLACE(OwnerAddress, ',', '.'), 3),
PARSENAME(REPLACE(OwnerAddress, ',', '.'), 2),
PARSENAME(REPLACE(OwnerAddress, ',', '.'), 1)
FROM Nashville

ALTER TABLE Nashville 
ADD OwnerSplitAddress NVARCHAR(255)

ALTER TABLE Nashville
ADD OwnerSplitCity NVARCHAR(255)

ALTER TABLE Nashville 
ADD OwnerSplitState NVARCHAR(255)

UPDATE Nashville 
SET OwnerSplitAddress = PARSENAME(REPLACE(OwnerAddress, ',', '.'), 3)

UPDATE NashVille 
SET OwnerSplitCity = PARSENAME(REPLACE(OwnerAddress, ',', '.'), 2)

UPDATE NashVille 
SET OwnerSplitState = PARSENAME(Replace(OwnerAddress, ',', '.'), 1)

SELECT * FROM Nashville

--Change Y and N to Yes and No in 'Sold as Vacant' field 
SELECT DISTINCT(SoldasVacant), COUNT(Soldasvacant)
FROM nashville
GROUP BY SoldasVacant

SELECT Soldasvacant,
       CASE 
	   WHEN Soldasvacant = 0 THEN 'No'
	   WHEN SoldAsVacant = 1 THEN 'Yes'
       end as SoldasVacant 
FROM Nashville
				   
UPDATE Nashville
SET SoldAsVacantTransformed = CASE WHEN SoldAsVacant = 0 THEN 'NO'
                   WHEN SoldAsVacant = 1 THEN 'Yes'
				   End

ALTER TABLE NashVille
ADD SoldAsVacantTransformed VARCHAR(10)

SELECT * FROM Nashville


--Remove Duplicates
WITH RowNumCTE AS(
SELECT *,
     ROW_NUMBER () OVER(
     PARTITION BY ParcelID, 
	 PropertyAddress, 
	 SalePrice, 
	 SaleDate,
     LegalReference ORDER BY UniqueID) row_num 
FROM Nashville)
DELETE FROM RowNumCTE
WHERE row_num > 1 

--Delete Unused Columns
ALTER TABLE Nashville 
DROP COLUMN OwnerAddress, SoldAsVacant, TaxDistrict, PropertyAddress

ALTER TABLE Nashville
DROP COLUMN SaleDate
